openapi: 3.0.3
info:
  title: API de Productos
  version: 1.0.0
  description: Documentación de la API para la gestión de productos en la tienda.
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    Product:
      type: object
      required:
        - title
        - price
        - stock
      properties:
        _id:
          type: string
          description: ID único del producto
          example: "60c72b2f9b1e8e001c8e4b8a"
        title:
          type: string
          description: Nombre del producto
          example: "Camiseta de Algodón"
        description:
          type: string
          description: Breve descripción del producto
          example: "Camiseta de algodón orgánico, suave y cómoda."
        category:
          type: string
          description: Categoría del producto
          example: "Accessories"
        image:
          type: string
          description: URL de la imagen del producto
          example: "https://example.com/images/camiseta.jpg"
        price:
          type: number
          description: Precio del producto
          example: 19.99
        stock:
          type: number
          description: Cantidad disponible en stock
          example: 150
        onsale:
          type: boolean
          description: Si está en oferta
          example: true
      description: Modelo de producto
    ProductInput:
      type: object
      required:
        - title
        - price
        - stock
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum: ["Accessories", "Clothing", "Electronics", "Home", "Sports"]
        image:
          type: string
        price:
          type: number
        stock:
          type: number
        onsale:
          type: boolean
      description: Datos requeridos para crear/actualizar un producto
    Error:
      type: object
      properties:
        message:
          type: string
      example:
        message: "Error interno del servidor"
    Success:
      type: object
      properties:
        message:
          type: string
          example: "Operación exitosa"
        data:
          type: object
          additionalProperties: true
  responses:
    UnauthorizedError:
      description: No autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "No autorizado"
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "Producto no encontrado"
    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "Error interno del servidor"
    Success:
      description: Operación exitosa
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
paths:
  /api/products:
    post:
      summary: Crear un nuevo producto
      description: Crea un nuevo producto en la tienda.
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      security:
        - cookieAuth: []
      responses:
        '201':
          $ref: '#/components/responses/Success'
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Solicitud incorrecta"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Obtener todos los productos
      description: Recupera una lista de todos los productos disponibles en la tienda. Puede incluir filtros por query params.
      tags: [Products]
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/products/{id}:
    get:
      summary: Obtener un producto por ID
      description: Recupera los detalles de un producto específico por su ID.
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a obtener
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Actualizar un producto por ID
      description: Actualiza los detalles de un producto específico por su ID.
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Solicitud incorrecta"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Eliminar un producto por ID
      description: Elimina un producto específico por su ID.
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
