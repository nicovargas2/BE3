openapi: 3.0.3
info:
  title: API de Users
  version: 1.0.0
  description: Documentación de la API para la gestión de usuarios en la tienda.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        _id:
          type: string
          description: ID único del producto
          example: "60c72b2f9b1e8e001c8e4b8a"
        name:
          type: string
          description: Nombre del usuario
          example: "Juan"
        date:
          type: string
          format: date
          description: Fecha de nacimiento del usuario
          example: "1990-07-09"
        email:
          type: string
          description: email del usuario
          example: "example@email.com"
        password:
          type: string
          description: Contraseña del usuario
          example: "password123"
        avatar:
          type: string
          description: URL de la foto del usuario
          example: "https://example.com/avatar.jpg"
        role:
          type: string
          description: Rol del usuario en la tienda
          example: "USER"
      description: Modelo de user
      example:
        name: Juan
        date: "1990-07-09"
        email: "example@email.com"
    Error:
      type: object
      properties:
        message:
          type: string
      example:
        message: "Error interno del servidor"
    Success:
      type: object
      properties:
        message:
          type: string
          example: "Operación exitosa"
        data:
          type: object
          additionalProperties: true
  responses:
    UnauthorizedError:
      description: No autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "No autorizado"
    BadRequest:
      description: Solicitud incorrecta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "Solicitud incorrecta"
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "Producto no encontrado"
    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: "Error interno del servidor"
    Success:
      description: Operación exitosa
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
paths:
  /api/users:
    security:
      - bearerAuth: []
    get:
      summary: Obtener todos los usuarios
      description: Recupera una lista de todos los usuarios registrados en la tienda.
      tags: [Users]
      responses:
        200:
          description: Lista de usuarios encontrada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en la tienda.
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        400:
          description: Error de validación de datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/users/{id}:
    security:
      - bearerAuth: []
    get:
      summary: Obtener un usuario por ID
      description: Recupera un usuario específico por su ID.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario a recuperar
      responses:
        200:
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Actualizar un usuario por ID
      description: Actualiza los datos de un usuario específico por su ID.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      security:
        - bearerAuth: []
      summary: Eliminar un usuario por ID
      description: Elimina un usuario específico por su ID.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario a eliminar
      responses:
        200:
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  