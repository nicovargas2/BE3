components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        name:
          description: Nombre del usuario
          type: string
        date:
          description: Fecha de nacimiento del usuario
          type: date
        email:
          description: Correo electronico del usuario
          type: string
          format: email
        password:
          description: Contraseña para iniciar sesión del usuario
          type: string
        avatar:
          description: Foto del usuario
          type: string
        role:
          description: Rol que ocupa el usuario en el servidor
          type: string
      example:
        name: Juan
        date: 1990-07-09
        email: Juan@coder.com
        password: hola1234
        avatar: https://cdn-icons-png.flaticon.com/512/266/266033.png
        role: USER
  responses:
    error400:
      type: object
      properties:
        method:
          description: Metodo con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/login
        error: Invalid data
    error401:
      type: object
      properties:
        method:
          description: Metodo con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/login
        error: Invalid credentials
    error403:
      type: object
      properties:
        method:
          description: Metodo con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/me
        error: Forbidden
    error500:
      type: object
      properties:
        method:
          description: Metodo con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/me
        error: Fatal error
paths:
  /api/auth/login:
    security:
      - bearerAuth: []
    post:
      summary: Inicia la sesión de un usuario, guardando el token en una cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: Correo electronico del usuario
                  type: string
                  format: email
                password:
                  description: Contraseña para iniciar sesión del usuario
                  type: string
              example:
                email: Juan@coder.com
                password: hola1234
      responses:
        200:
          description: Exito en el inicio de sesión
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    description: Metodo con el cual se realizó la solicitud
                    type: string
                  url:
                    description: Ruta a la cual se realizó la solicitud
                    type: string
                  response:
                    description: Mensaje de éxito de la operación
                    type: string
                example:
                  method: post
                  url: /api/auth/login
                  response: Logged in
        400:
          description: Falta de algún dato válido para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error400'
        401:
          description: Credenciales inválidas para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error401'
        500:
          description: Error del lado del servidor al iniciar sesión
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error500'

  /api/auth/register:
    security:
      - bearerAuth: []
    post:
      summary: Registra un nuevo usuario
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                  url:
                    type: string
                  response:
                    type: string
                example:
                  method: post
                  url: /api/auth/register
                  response: Registered
        400:
          description: Datos inválidos para el registro
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error400'
        500:
          description: Error del lado del servidor al registrar
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error500'

  /api/auth/signout:
    security:
      - bearerAuth: []
    post:
      summary: Cierra la sesión del usuario actual
      tags:
        - Auth
      responses:
        200:
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                  url:
                    type: string
                  response:
                    type: string
                example:
                  method: post
                  url: /api/auth/signout
                  response: Signed out
        401:
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error401'
        500:
          description: Error del lado del servidor al cerrar sesión
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error500'

  /api/auth/online:
    security:
      - bearerAuth: []
    get:
      summary: Verifica si el usuario está autenticado y online
      tags:
        - Auth
      responses:
        200:
          description: Usuario autenticado y online
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                  url:
                    type: string
                  response:
                    type: string
                example:
                  method: get
                  url: /api/auth/online
                  response: User is online
        401:
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error401'
        500:
          description: Error del lado del servidor al verificar estado online
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error500'